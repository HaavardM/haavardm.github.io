{"version":3,"sources":["webpack:///./src/views/AnyoneThere.vue?ed10","webpack:///./src/components/AnyoneThere.vue?60b1","webpack:///./src/components/AnyoneThere.vue","webpack:///./src/components/AnyoneThere.vue?5d17","webpack:///./src/components/AnyoneThere.vue?a5d1","webpack:///src/views/AnyoneThere.vue","webpack:///./src/views/AnyoneThere.vue?0552","webpack:///./src/views/AnyoneThere.vue","webpack:///./src/views/AnyoneThere.vue?90f7","webpack:///./src/components/AnyoneThere.vue?3221"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","staticRenderFns","_v","attrs","class","getStateClass","state","current","value","_s","prettyPrintState","_e","_l","s","key","timestamp","prettyPrintDate","history","get","then","r","data","update","interval","setInterval","clearInterval","d","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","parse","reverse","component","name","components","AnyoneThere"],"mappings":"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","file":"js/chunk-32bd36cc.a74d70b9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container-fluid\"},[_c('AnyoneThere'),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"card m-2 p-4 text-left\"},[_c('h1',{staticClass:\"text-center\"},[_vm._v(\"What is this?\")]),_c('p',[_vm._v(\" What your're looking at is a small embedded / cloud project I did for fun. The emoji indicates whether there is movement in front of the computer, i.e. if I am present in the room or not. The purpose of this project was mainly to play around with embedded electronics and cloud software. \")]),_c('label',[_vm._v(\"The project consist of three parts:\")]),_c('ol',[_c('li',[_vm._v(\"An embedded Particle Core microcontroller with WiFi support.\")]),_c('li',[_vm._v(\" A backend for IoT event handling, using Google Cloud IoT Hub, Pub/Sub, Rust and GKE \")]),_c('li',[_vm._v(\"The frontend webapplication you are looking at.\")])]),_c('hr'),_c('h2',[_vm._v(\"Part 1: Embedded\")]),_c('span',[_vm._v(\" The embedded part of the project is based on a Particle Core Dev Kit. The microcontroller is using a cheap PIR sensor to detect movement. When the state changes, the microcontroller sends a message using MQTT with TLS to Google Cloud IoT Hub (more on this later). In order to perform authentication with IoT Hub, a valid JWT needs to be signed by the device and used as password when connecting to the MQTT broker. As no JWT library was found among the public libraries for the Particle Core, the JWT was manually created and then signed using the opensource library mbedtls. The ES256 signature was generated using a sha256 hash and ECDSA with the secp256r1 (P-265) curve. Generating a valid JWT turned out to be more challenging than expected. Even after I was able to confirm the signature using OpenSSL, the JWT was still not accepted. In the end it turned out that the function \"),_c('code',[_vm._v(\"mbedtls_ecdsa_write_signature\")]),_vm._v(\" automatically removes any leading zeros from the signature (which is common practice in many usecases), while JWT expects leading zeros to be included. Manually creating the ECDSA signature \"),_c('code',[_vm._v(\"r\")]),_vm._v(\" and \"),_c('code',[_vm._v(\"s\")]),_vm._v(\" solved the issue. The microcontroller is now able to automatically generate a valid JWT from a private key, detect movement in the apartment and send messages using MQTT. \")]),_c('hr'),_c('h2',[_vm._v(\"Part 2: The Cloud\")]),_c('span',[_vm._v(\" Google Cloud IoT Hub receives messages from the MQTT broker and automatically publish the messages on a predefined Pub/Sub topic. In order to display the state on this page, a Rust application was developed to consume messages from a Pub/Sub subscription, aggregate the values and respond to HTTP request with the current state. This was my second time working with Rust and first time using Rust in an application for use in Linux / K8S. A few problems turned out to be annoying: \"),_c('ul',[_c('li',[_vm._v(\" Dependencies was a bit challenging. Several libraries imported \"),_c('code',[_vm._v(\"tokio\")]),_vm._v(\", but using different version. This resulted in tokio complaining about multiple runtimes used in the same application. In the end I had to downgrade one of the libraries in order to avoid conflicts. \")]),_c('li',[_vm._v(\" When deploying Go applications, I usually like to use alpine Docker images to reduce the image size. This seemed to work for Rust as well according to the docs, but I was unable to get it to work. Rust was not able to compile the application due to some missing libraries. Even after installing \"),_c('code',[_vm._v(\"libc6-compat\")]),_vm._v(\" it was still not working. I had to give up alpine for now, and reverted back to using a debian base image. \")]),_c('li',[_vm._v(\" The Rust development experience is still not as good as I would've hoped. The VSCode plugin was not able to provide any autocomplete most of the time, even if it was seemingly able to correctly infer return types. I might be spoiled coming from Golang as my daily driver, but I expect basic autocompletion when working with such a strongly typed language. \")]),_c('li',[_vm._v(\" The build times are slow. This is annoying, but I guess it is worth as you get zero-cost abstractions. Comparing the compile times to a language such as Golang would not be fair. \")])])]),_vm._v(\" Rust looks very promising, but it still feels unfinished to me. Most libraries are not yet considered stable, many libraries requires the nightly compiler, and the development tools (looking at you Rust VSCode plugin) still feels flaky. The generated Rust code is probably amazing, but I would still feel uncomfortable trusting the language for use in production systems. No persistent storage was used when implementing this application and the state will be lost if the K8S pod restarts. In the future I might (probably not) add Redis support or use a Google Cloud service such as Datastore. \"),_c('hr'),_c('h2',[_vm._v(\"Part 3: The UI\")]),_vm._v(\" The UI is simply an extension to this website, a place where I can put all my small projects which do not need an entire setup. This application was built as a custom component in Vue, and simply polls the Rust API frequenctly to retrieve the latest status. Some UI magic later, and you can see the results here. \")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[_c('div',{staticClass:\"card m-2\",class:_vm.getStateClass(_vm.state.current.value)},[_c('div',{staticClass:\"row m-5 p-2\"},[_c('div',{staticClass:\"col state-text\"},[(_vm.state)?_c('h1',[_vm._v(_vm._s(_vm.prettyPrintState(_vm.state.current.value)))]):_vm._e()])])])]),_c('div',{staticClass:\"card m-2 py-4\"},_vm._l((_vm.history),function(s){return _c('div',{key:s.timestamp,staticClass:\"row m-2\"},[_c('hr'),_c('div',{staticClass:\"col state-text\"},[_c('p',[_vm._v(\" \"+_vm._s(_vm.prettyPrintState(s.value))+\" \")])]),_c('div',{staticClass:\"col state-timestamp\"},[_c('p',[_vm._v(_vm._s(_vm.prettyPrintDate(s.timestamp)))])]),_c('hr')])}),0)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport Axios from \"axios\";\n\ninterface State {\n  value: string;\n  timestamp: string;\n}\n\ninterface Response {\n  current: State;\n  history: State[];\n}\n\n@Component\nexport default class AnyoneThere extends Vue {\n  state: Response = {\n    current: { value: \"UNKNOWN\", timestamp: \"\" },\n    history: [],\n  };\n  interval: number | undefined;\n  update(): void {\n    Axios.get(\"https://amiworking.shapingideas.fyi\").then((r) => {\n      this.state = r.data;\n    });\n  }\n\n  created(): void {\n    this.update();\n    this.interval = setInterval(this.update, 500);\n  }\n\n  destroyed(): void {\n    clearInterval(this.interval);\n  }\n\n  getStateClass(state: string): string {\n    switch (state) {\n      case \"PRESENT\":\n        return \"state-present\";\n      case \"NOT_PRESENT\":\n        return \"state-not-present\";\n      default:\n        return \"\";\n    }\n  }\n\n  prettyPrintState(state: string): string {\n    switch (state) {\n      case \"PRESENT\":\n        return \"🙉\";\n      case \"NOT_PRESENT\":\n        return \"🙈\";\n      default:\n        return \"🤐\";\n    }\n  }\n\n  prettyPrintDate(d: string): string {\n    return new Intl.DateTimeFormat(\"no\", {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    }).format(Date.parse(d));\n  }\n\n  get history(): State[] {\n    return this.state.history.reverse();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnyoneThere.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnyoneThere.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AnyoneThere.vue?vue&type=template&id=79a6588f&scoped=true&\"\nimport script from \"./AnyoneThere.vue?vue&type=script&lang=ts&\"\nexport * from \"./AnyoneThere.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./AnyoneThere.vue?vue&type=style&index=0&id=79a6588f&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"79a6588f\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"container-fluid\">\n    <AnyoneThere />\n    <div class=\"container\">\n      <div class=\"card m-2 p-4 text-left\">\n        <h1 class=\"text-center\">What is this?</h1>\n        <p>\n          What your're looking at is a small embedded / cloud project I did for\n          fun. The emoji indicates whether there is movement in front of the\n          computer, i.e. if I am present in the room or not. The purpose of this\n          project was mainly to play around with embedded electronics and cloud\n          software.\n        </p>\n        <label>The project consist of three parts:</label>\n        <ol>\n          <li>An embedded Particle Core microcontroller with WiFi support.</li>\n          <li>\n            A backend for IoT event handling, using Google Cloud IoT Hub,\n            Pub/Sub, Rust and GKE\n          </li>\n          <li>The frontend webapplication you are looking at.</li>\n        </ol>\n        <hr />\n        <h2>Part 1: Embedded</h2>\n        <span>\n          The embedded part of the project is based on a Particle Core Dev Kit.\n          The microcontroller is using a cheap PIR sensor to detect movement.\n          When the state changes, the microcontroller sends a message using MQTT\n          with TLS to Google Cloud IoT Hub (more on this later). In order to\n          perform authentication with IoT Hub, a valid JWT needs to be signed by\n          the device and used as password when connecting to the MQTT broker. As\n          no JWT library was found among the public libraries for the Particle\n          Core, the JWT was manually created and then signed using the\n          opensource library mbedtls. The ES256 signature was generated using a\n          sha256 hash and ECDSA with the secp256r1 (P-265) curve. Generating a\n          valid JWT turned out to be more challenging than expected. Even after\n          I was able to confirm the signature using OpenSSL, the JWT was still\n          not accepted. In the end it turned out that the function\n          <code>mbedtls_ecdsa_write_signature</code> automatically removes any\n          leading zeros from the signature (which is common practice in many\n          usecases), while JWT expects leading zeros to be included. Manually\n          creating the ECDSA signature <code>r</code> and <code>s</code> solved\n          the issue. The microcontroller is now able to automatically generate a\n          valid JWT from a private key, detect movement in the apartment and\n          send messages using MQTT.\n        </span>\n        <hr />\n        <h2>Part 2: The Cloud</h2>\n        <span>\n          Google Cloud IoT Hub receives messages from the MQTT broker and\n          automatically publish the messages on a predefined Pub/Sub topic. In\n          order to display the state on this page, a Rust application was\n          developed to consume messages from a Pub/Sub subscription, aggregate\n          the values and respond to HTTP request with the current state. This\n          was my second time working with Rust and first time using Rust in an\n          application for use in Linux / K8S. A few problems turned out to be\n          annoying:\n          <ul>\n            <li>\n              Dependencies was a bit challenging. Several libraries imported\n              <code>tokio</code>, but using different version. This resulted in\n              tokio complaining about multiple runtimes used in the same\n              application. In the end I had to downgrade one of the libraries in\n              order to avoid conflicts.\n            </li>\n            <li>\n              When deploying Go applications, I usually like to use alpine\n              Docker images to reduce the image size. This seemed to work for\n              Rust as well according to the docs, but I was unable to get it to\n              work. Rust was not able to compile the application due to some\n              missing libraries. Even after installing\n              <code>libc6-compat</code> it was still not working. I had to give\n              up alpine for now, and reverted back to using a debian base image.\n            </li>\n            <li>\n              The Rust development experience is still not as good as I would've\n              hoped. The VSCode plugin was not able to provide any autocomplete\n              most of the time, even if it was seemingly able to correctly infer\n              return types. I might be spoiled coming from Golang as my daily\n              driver, but I expect basic autocompletion when working with such a\n              strongly typed language.\n            </li>\n            <li>\n              The build times are slow. This is annoying, but I guess it is\n              worth as you get zero-cost abstractions. Comparing the compile\n              times to a language such as Golang would not be fair.\n            </li>\n          </ul>\n        </span>\n        Rust looks very promising, but it still feels unfinished to me. Most\n        libraries are not yet considered stable, many libraries requires the\n        nightly compiler, and the development tools (looking at you Rust VSCode\n        plugin) still feels flaky. The generated Rust code is probably amazing,\n        but I would still feel uncomfortable trusting the language for use in\n        production systems. No persistent storage was used when implementing\n        this application and the state will be lost if the K8S pod restarts. In\n        the future I might (probably not) add Redis support or use a Google\n        Cloud service such as Datastore.\n        <hr />\n        <h2>Part 3: The UI</h2>\n        The UI is simply an extension to this website, a place where I can put\n        all my small projects which do not need an entire setup. This\n        application was built as a custom component in Vue, and simply polls the\n        Rust API frequenctly to retrieve the latest status. Some UI magic later,\n        and you can see the results here.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport AnyoneThere from \"@/components/AnyoneThere.vue\";\n\nexport default {\n  name: \"AnyoneThereView\",\n  components: {\n    AnyoneThere,\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.text-box {\n  h1 {\n    margin: 2rem;\n  }\n  p {\n    text-align: left;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnyoneThere.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnyoneThere.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AnyoneThere.vue?vue&type=template&id=15f40ddc&scoped=true&\"\nimport script from \"./AnyoneThere.vue?vue&type=script&lang=js&\"\nexport * from \"./AnyoneThere.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AnyoneThere.vue?vue&type=style&index=0&id=15f40ddc&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15f40ddc\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnyoneThere.vue?vue&type=style&index=0&id=15f40ddc&scoped=true&lang=scss&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnyoneThere.vue?vue&type=style&index=0&id=79a6588f&scoped=true&lang=scss&\""],"sourceRoot":""}